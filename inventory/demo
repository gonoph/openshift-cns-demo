; vim: filetype=dosini

[ec2:vars]
ansible_user=cloud-user
private_ip_start=10
private_ip="{{ ec2_vpc_subnet_cidr_block | ipaddr(private_ip_start + groups['ec2'].index(inventory_hostname)) | ipaddr('address') }}"
rhel_extras_repo=rhui-REGION-rhel-server-extras
ocp_domain="{{ hostvars[groups.dns | first ].public_ip }}.nip.io"
ocp_app_domain="apps.{{ ocp_domain }}"
ocp_hostname="ocp.{{ ocp_domain }}"
hostname="{{ inventory_hostname }}.example.com"

openshift_release=3.7
openshift_image_tag=v3.7.2
# openshift_image_tag=v3.7.44
# origin or openshift-enterprise
openshift_deployment_type=origin

# Demo Customer CA Certificate
# This creates a demo of a company CA that signs and creates an OCP CA
# - ca.crt - Company CA
# - ocp-ca-bundle.crt - Company CA + OCP CA
# - ocp-ca-bundle-key - OCP CA Key
local_custom_certificates=true

# ec2_instance_type=m4.large
ec2_instance_type=t2.medium
# the following is RHEL Atomic 7.4.5 in us-east-1 via Cloud Access (not recommended)
# ec2_ami_image=ami-68ee1915
# the following is RHEL Atomic 7.4.4 in us-east-1 via Cloud Access (recommended)
ec2_ami_image=ami-d97120a3
# put your network here, but it will look up your current IP
# ec2_mynetworks=[ ]
# subnet will be picked from 1st subnet found in VPC if not defined
# ec2_vpc_subnet=subnet-ffffffff
# if you only have one VPC, then it will be selected, otherwise, define it here
# ec2_vpc_id=vpc-fffffff

[ec2]
dns1 ec2_volumes='{{ default_ec2_volumes[0:1] }}' ec2_instance_type=t2.micro
master[1:3] ec2_volumes='{{ default_ec2_volumes }}' storage_devices='{{ default_ec2_drive_map[2:3] }}'
node[1:3] ec2_volumes='{{ default_ec2_volumes[0:2] }}'

[dns]
dns1

[masters]
master[1:3]

[nodes]
master[1:3]
node[1:3]

[storage]
master[1:3]
